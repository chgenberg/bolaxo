// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(cuid())
  email           String    @unique
  name            String?
  role            String    // seller, buyer, broker
  verified        Boolean   @default(false)
  bankIdVerified  Boolean   @default(false)
  
  // Profile data
  phone           String?
  companyName     String?
  orgNumber       String?
  region          String?
  
  // Magic link tokens
  magicLinkToken  String?   @unique
  tokenExpiresAt  DateTime?
  
  // Timestamps
  createdAt       DateTime  @default(now())
  lastLoginAt     DateTime?
  
  // Relations
  valuations      Valuation[]
  listings        Listing[]
  
  @@index([email])
  @@index([magicLinkToken])
}

model Valuation {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  
  // User relation
  userId       String?
  user         User?    @relation(fields: [userId], references: [id])
  
  email        String?
  companyName  String?
  industry     String?
  inputJson    Json
  resultJson   Json
  mostLikely   Int
  minValue     Int
  maxValue     Int
  
  @@index([userId])
  @@index([email])
}

model Listing {
  id              String   @id @default(cuid())
  userId          String
  user            User     @relation(fields: [userId], references: [id])
  
  companyName     String?
  anonymousTitle  String
  industry        String
  revenue         String
  employees       String
  location        String
  
  status          String   @default("draft") // draft, active, sold, paused
  packageType     String   // basic, featured, premium
  
  createdAt       DateTime @default(now())
  publishedAt     DateTime?
  expiresAt       DateTime?
  
  @@index([userId])
  @@index([status])
}

model CompanyCache {
  id              String   @id @default(cuid())
  orgNumber       String?  @unique
  websiteUrl      String?  @unique
  enrichedData    Json
  scrapedPages    Int      @default(0)
  createdAt       DateTime @default(now())
  expiresAt       DateTime
}
